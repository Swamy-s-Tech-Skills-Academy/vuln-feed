using LinkGenerator = VulnFeed.Common.Http.LinkGenerator;

namespace VulnFeed.Web.Endpoints;

/// <summary>
/// Provides methods to generate URLs for vulnerability feed endpoints.
/// </summary>
public sealed class VulnerabilityFeedEndpoints(LinkGenerator linkGenerator)
{
    private readonly LinkGenerator _linkGenerator = linkGenerator ?? throw new ArgumentNullException(nameof(linkGenerator));

    /// <summary>
    /// Generates the URL for a specific vulnerability.
    /// </summary>
    /// <param name="vulnerabilityId">The identifier of the vulnerability.</param>
    /// <returns>The URL as a string if <paramref name="vulnerabilityId"/> is valid; otherwise, null.</returns>
    public string? GetVulnerabilityLocation(long vulnerabilityId) =>
        vulnerabilityId == default
            ? null
            : _linkGenerator.GenerateUri("api/vulnerabilities", vulnerabilityId.ToString()).ToString();
}